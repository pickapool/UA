// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace UA.Dialogs
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Components;
#nullable restore
#line (1,2)-(1,23) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using System.Net.Http

#nullable disable
    ;
#nullable restore
#line (2,2)-(2,28) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using System.Net.Http.Json

#nullable disable
    ;
#nullable restore
#line (3,2)-(3,45) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms

#nullable disable
    ;
#nullable restore
#line (4,2)-(4,47) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing

#nullable disable
    ;
#nullable restore
#line (5,2)-(5,43) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using Microsoft.AspNetCore.Components.Web

#nullable disable
    ;
#nullable restore
#line (6,2)-(6,58) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization

#nullable disable
    ;
#nullable restore
#line (7,2)-(7,56) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http

#nullable disable
    ;
#nullable restore
#line (8,2)-(8,27) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using Microsoft.JSInterop

#nullable disable
    ;
#nullable restore
#line (9,2)-(9,10) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA

#nullable disable
    ;
#nullable restore
#line (10,2)-(10,17) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Shared

#nullable disable
    ;
#nullable restore
#line (11,2)-(11,53) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization

#nullable disable
    ;
#nullable restore
#line (12,2)-(12,42) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using Microsoft.AspNetCore.Authorization

#nullable disable
    ;
#nullable restore
#line (13,2)-(13,49) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using System.Runtime.InteropServices.JavaScript

#nullable disable
    ;
#nullable restore
#line (15,2)-(15,29) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using Blazored.LocalStorage

#nullable disable
    ;
#nullable restore
#line (16,2)-(16,17) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using MudBlazor

#nullable disable
    ;
#nullable restore
#line (17,2)-(17,26) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using Blazored.Typeahead

#nullable disable
    ;
#nullable restore
#line (18,2)-(18,27) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using MudBlazor.Utilities

#nullable disable
    ;
#nullable restore
#line (19,2)-(19,20) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using IronBarCode;

#nullable disable
#nullable restore
#line (20,2)-(20,21) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using OfficeOpenXml

#nullable disable
    ;
#nullable restore
#line (22,2)-(22,21) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Components

#nullable disable
    ;
#nullable restore
#line (23,2)-(23,17) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Common

#nullable disable
    ;
#nullable restore
#line (24,2)-(24,16) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Enums

#nullable disable
    ;
#nullable restore
#line (25,2)-(25,17) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Models

#nullable disable
    ;
#nullable restore
#line (26,2)-(26,18) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Dialogs

#nullable disable
    ;
#nullable restore
#line (28,2)-(28,35) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Services.AccountServices

#nullable disable
    ;
#nullable restore
#line (29,2)-(29,38) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Services.DepartmentServices

#nullable disable
    ;
#nullable restore
#line (30,2)-(30,36) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Services.SanctionServices

#nullable disable
    ;
#nullable restore
#line (31,2)-(31,34) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Services.CourseServices

#nullable disable
    ;
#nullable restore
#line (32,2)-(32,35) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Services.SectionServices

#nullable disable
    ;
#nullable restore
#line (33,2)-(33,35) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Services.StudentServices

#nullable disable
    ;
#nullable restore
#line (34,2)-(34,40) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Services.UserSanctionServices

#nullable disable
    ;
#nullable restore
#line (35,2)-(35,44) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Services.DepartmentCourseServices

#nullable disable
    ;
#nullable restore
#line (36,2)-(36,34) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Services.ReportServices

#nullable disable
    ;
#nullable restore
#line (37,2)-(37,33) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Services.EventServices

#nullable disable
    ;
#nullable restore
#line (38,2)-(38,43) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Services.EventAttendanceServices

#nullable disable
    ;
#nullable restore
#line (39,2)-(39,36) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using UA.Services.ReminderServices

#nullable disable
    ;
#nullable restore
#line (41,2)-(41,43) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\_Imports.razor"
using Microsoft.AspNetCore.SignalR.Client

#nullable disable
    ;
    #line default
    #line hidden
    #nullable restore
    public partial class StudentDialog : global::Microsoft.AspNetCore.Components.ComponentBase
    #nullable disable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line (226,8)-(477,1) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"

    [CascadingParameter] public MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public StudentModel StudentModel { get; set; }
    [Parameter] public Color color { get; set; }
    [Parameter] public string dialogTitle { get; set; } = string.Empty;
    [Parameter] public string buttonText { get; set; } = string.Empty;
    private bool IsLoading = true;
    private List<CourseModel> courses = new(), currentCourses = new();
    private List<DepartmentModel> departments = new();
    private List<SanctionModel> sanctions = new();
    private List<SectionModel> sections = new();
    private SanctionModel sanction = new();
    private int xsL = 12;
    private int xsR = 0;
    private string hide = "d-none";
    private List<UserSanctionModel> userSanctions = new();
    private UserSanctionModel userSanc = new();
    private int[] pageSize = new int[] {30, 50, 100, 500, 1000 };
    private string searchTerm = string.Empty;
    private bool reload = false;
    IList<IBrowserFile> files = new List<IBrowserFile>();
    protected override async Task OnInitializedAsync()
    {
        if(StudentModel.StudentId == 0)
        {
            xsL = 12;
            xsR = 0;
            hide = "d-none";
        } else {
            xsL = 4;
            xsR = 8;
            hide = "d-block";
        }
        Task t = GetList();
        await t;
        if(t.Status == TaskStatus.RanToCompletion)
        {
            IsLoading = !IsLoading;
            StateHasChanged();
        }
    }
    void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Submit()
    {
        IsLoading = !IsLoading;
        Task t = StudentModel.StudentId == 0 ? AddStudent() : UpdateStudent();
        await t;
        if (t.Status == TaskStatus.RanToCompletion)
        {
            await Task.Delay(1000);
            Extensions.ShowAlert("Student successfully saved.", Variant.Filled, Snackbar, Severity.Success);
            MudDialog.Close();
            IsLoading = !IsLoading;
        }
    }
    private async Task AddStudent()
    {
        MapIds();
        await StudentService.AddStudent(StudentModel);
    }
    private async Task UpdateStudent()
    {
        MapIds();
        List<UserSanctionModel> list = StudentModel.Sanctions;
        StudentModel.Sanctions = new();
        await StudentService.UpdateStudent(StudentModel);
        StudentModel.Sanctions = list;
    }
    private async Task GetList()
    {
        departments =  await departmentService.ListOfDepartment(new FilterParameter());
        courses =  await courseService.ListOfCourse(new FilterParameter());
        sanctions =  await sanctionService.ListOfSanction(new FilterParameter());
        sections =  await sectionService.ListOfSection(new FilterParameter());
        await GetUserSanctions();
        if(StudentModel.StudentId == 0)
        {
            if(courses.Count > 0)
                StudentModel.Course = courses.FirstOrDefault()?? new();
            if(departments.Count > 0)
                StudentModel.Department = departments.FirstOrDefault()?? new();
            if(sections.Count > 0)
                StudentModel.Section = sections.FirstOrDefault()?? new();
            if(StudentModel.StudentId == 0)
                StudentModel.YearLevel = Enums.YearLevel.Firstyear;
            await DepartmentChange(departments.FirstOrDefault());
        }
        StateHasChanged();
        // await Task.Delay(1500);
    }
    private async Task<IEnumerable<SanctionModel>> LoadSanctions(string sanc)
    {
        return await Task.FromResult(sanctions.Where(s => s.SanctionName.Contains(sanc, StringComparison.InvariantCultureIgnoreCase)));
    }
    private void MapIds()
    {
        StudentModel.CourseId = StudentModel.Course.CourseId;
        StudentModel.DepartmentId = StudentModel.Department.DepartmentId;
        StudentModel.SectionId = StudentModel.Section.SectionId;
    }
    private async Task AddSanction()
    {
        userSanc  = new();
        userSanc.StudentId = StudentModel.StudentId;
        userSanc.SanctionId = sanction.SanctionId;
        userSanc.Sanction.SanctionId = sanction.SanctionId;
        userSanc.Sanction.SanctionName = sanction.SanctionName;
        userSanc.Amount = sanction.Amount;
        userSanc.UserId = GlobalClass.Account.UserId;
        userSanc.MarkAsPaidById = 1;
        foreach (var file in files)
        {
            using (MemoryStream memoryStream = new MemoryStream())
            {
                //Fix upload file size
                await file.OpenReadStream(209715200).CopyToAsync(memoryStream);
                userSanc.SanctionImage = memoryStream.ToArray();
            }
        }
        Task<UserSanctionModel> task = userSanctionService.AddUserSanction(userSanc);
        await task;
        if(task.Status == TaskStatus.RanToCompletion)
        {
            Extensions.ShowAlert("Sanction successfully added.", Variant.Filled, Snackbar, Severity.Success);
            await GetUserSanctions();
        }
    }
    private async Task<List<UserSanctionModel>> GetUserSanctions()
    {

        Task<List<UserSanctionModel>> t = userSanctionService.ListOfUserSanction(
            new FilterParameter
            {
                StudentId = StudentModel.StudentId
            });
        await t;
        if(t.Status == TaskStatus.RanToCompletion)
        {
            userSanctions = t.Result;
        }
        return new();
    }
    private async Task<UserSanctionModel> RemoveUserSanctions(UserSanctionModel uSan)
    {
        IsLoading = !IsLoading;
        if(uSan.IsPaid)
        {
            var parameters = new DialogParameters();
            var options = new DialogOptions() { CloseButton = false, MaxWidth = MaxWidth.ExtraSmall, FullWidth = true, NoHeader = false, DisableBackdropClick = true };
            var resultDialog = await dialogService.Show<Dialogs.ConfirmAdmin>("", parameters, options).Result;
            if(!resultDialog.Cancelled)
            {
                Task<UserSanctionModel> t = userSanctionService.DeleteUserSanction(uSan.UserSanctionId);
                await t;
                if(t.Status == TaskStatus.RanToCompletion)
                {
                    Extensions.ShowAlert("Sanction successfully removed.", Variant.Filled, Snackbar, Severity.Success);
                    await GetUserSanctions();
                }
                IsLoading = !IsLoading;
                return new();
            }
        } else {
             Task<UserSanctionModel> t1 = userSanctionService.DeleteUserSanction(uSan.UserSanctionId);
            await t1;
            if(t1.Status == TaskStatus.RanToCompletion)
            {
                Extensions.ShowAlert("Sanction successfully removed.", Variant.Filled, Snackbar, Severity.Success);
                await GetUserSanctions();
            }
            IsLoading = !IsLoading;
            return new();
        } 
        return new();
    }
    private async Task<UserSanctionModel> PaidSanction(UserSanctionModel uSan)
    {
        IsLoading = !IsLoading;
        if(uSan.IsPaid)
        {
            var parameters = new DialogParameters();
            var options = new DialogOptions() { CloseButton = false, MaxWidth = MaxWidth.ExtraSmall, FullWidth = true, NoHeader = false, DisableBackdropClick = true };
            var resultDialog = await dialogService.Show<Dialogs.ConfirmAdmin>("", parameters, options).Result;
            if(!resultDialog.Cancelled)
            {
                uSan.IsPaid = !uSan.IsPaid;
                uSan.MarkAsPaidById = GlobalClass.Account.UserId;
                //Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject(uSan, Newtonsoft.Json.Formatting.Indented));
                Task<UserSanctionModel> t = userSanctionService.UpdateUserSanction(uSan);
                await t;
                if(t.Status == TaskStatus.RanToCompletion)
                {
                    Extensions.ShowAlert("Sanction successfully update.", Variant.Filled, Snackbar, Severity.Success);
                    await GetUserSanctions();
                }
                IsLoading = !IsLoading;
                return new();
            }
        } else {
            uSan.IsPaid = !uSan.IsPaid;
            uSan.MarkAsPaidById = GlobalClass.Account.UserId;
            //Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject(uSan, Newtonsoft.Json.Formatting.Indented));
            Task<UserSanctionModel> t1 = userSanctionService.UpdateUserSanction(uSan);
            await t1;
            if(t1.Status == TaskStatus.RanToCompletion)
            {
                Extensions.ShowAlert("Sanction successfully update.", Variant.Filled, Snackbar, Severity.Success);
                await GetUserSanctions();
            }
            IsLoading = !IsLoading;
            return new();
        }
        return new();
    
    }

    private async Task DepartmentChange(DepartmentModel m)
    {
        reload = false;
        StudentModel.Department = m;
        StateHasChanged();
        Task<List<DepartmentCourseModel>> list = departmentCourseService.ListOfDepartmentCourse(
            new FilterParameter{
                DepartmentId = m.DepartmentId
            });
        await list;
        if(list.Status == TaskStatus.RanToCompletion)
        {
            currentCourses = courses.Where( d => list.Result.Any( dc => dc.CourseId == d.CourseId)).ToList();
            reload = true;
            StateHasChanged();
        }
    }
    private async Task OpenQR()
    {
        var options = new DialogOptions() { CloseButton = false, MaxWidth = MaxWidth.ExtraSmall, FullWidth = true, NoHeader = false, DisableBackdropClick = false };
        var resultDialog = await dialogService.Show<Dialogs.QRCodeDialog>("", options).Result   ;
        if (!resultDialog.Canceled)
        {
            StudentModel.QRCode = (string) resultDialog.Data;
        }
    }
    private void UploadFiles2(IBrowserFile file)
    {
        files.Clear();
        files.Add(file);
    }

#line default
#line hidden
#nullable disable

        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line (9,9)-(9,23) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
IDialogService

#line default
#line hidden
#nullable disable
         
#nullable restore
#line (9,24)-(9,37) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
dialogService

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line (8,9)-(8,33) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
IDepartmentCourseService

#line default
#line hidden
#nullable disable
         
#nullable restore
#line (8,34)-(8,57) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
departmentCourseService

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line (7,9)-(7,29) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
IUserSanctionService

#line default
#line hidden
#nullable disable
         
#nullable restore
#line (7,30)-(7,49) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
userSanctionService

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line (6,9)-(6,25) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
ISanctionService

#line default
#line hidden
#nullable disable
         
#nullable restore
#line (6,26)-(6,41) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
sanctionService

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line (5,9)-(5,24) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
ISectionService

#line default
#line hidden
#nullable disable
         
#nullable restore
#line (5,25)-(5,39) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
sectionService

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line (4,9)-(4,27) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
IDepartmentService

#line default
#line hidden
#nullable disable
         
#nullable restore
#line (4,28)-(4,45) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
departmentService

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line (3,9)-(3,23) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
ICourseService

#line default
#line hidden
#nullable disable
         
#nullable restore
#line (3,24)-(3,37) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
courseService

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line (2,9)-(2,18) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
ISnackbar

#line default
#line hidden
#nullable disable
         
#nullable restore
#line (2,19)-(2,27) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
Snackbar

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line (1,9)-(1,24) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
IStudentService

#line default
#line hidden
#nullable disable
         
#nullable restore
#line (1,25)-(1,39) "C:\Users\User\Desktop\Projects\Blazor Projects\UA\UA\Dialogs\StudentDialog.razor"
StudentService

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
    }
}
#pragma warning restore 1591
