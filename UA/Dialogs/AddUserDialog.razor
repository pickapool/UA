@inject IAccountService AccountService
@inject ISnackbar SnackBarService

<MudDialog Class='customdialog2'>
    <TitleContent>
        <div class='d-flex align-center'>
            <MudText Class='txt-uppercase' Typo='Typo.h6'>Add User</MudText>
        </div>
    </TitleContent>
    <DialogContent>
        <MudPaper Class='pa-2' Elevation='0'>
            <MudGrid Class='settings-dialog pa-2' Spacing='1'>
                <MudItem xs=11>
                     <MudTextField @bind-Value='@account.Username' Label='Username' InputType="InputType.Text"
                                  ErrorText="Required*" HelperText="Required*" Margin='Margin.Dense' Required/>
                </MudItem>
                <MudItem xs=11>
                     <MudTextField @bind-Value='@account.Password' Label='Password' InputType="InputType.Password"
                                  ErrorText="Required*" HelperText="Required*" Margin='Margin.Dense' Required/>
                </MudItem>
                <MudItem xs='11'>
                     <MudTextField @bind-Value='@confirmPassword' Label='Confirm Password' InputType="InputType.Password"
                                  ErrorText="Required*" HelperText="Required*" Margin='Margin.Dense' Required/>
                </MudItem>
            </MudGrid>
        </MudPaper>
    </DialogContent>
    <DialogActions>
        <MudSpacer />
        <MudButton Class='btn-ios-d font12' OnClick="Cancel" Variant='Variant.Text' Size='Size.Small' DisableElevation>
            Cancel
        </MudButton>
        @if (IsLoading)
        {
            <MudButton Class='btn-ios-d font12' ButtonType='ButtonType.Submit' Variant='Variant.Filled'
                       Color='Color.Default' Size='Size.Small' Disabled=IsLoading DisableElevation>
             <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
             <MudText Class='font11 ms-2'>Loading...</MudText>
         </MudButton>
        }
        else
        {
            <MudButton OnClick="Save" Class='btn-ios-d font12' ButtonType='ButtonType.Submit' Variant='Variant.Filled'
                       Color='Color.Success' Size='Size.Small' Disabled=IsLoading DisableElevation>
             Save
         </MudButton>
        }
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; } = default!;
    private bool IsLoading = false, reload = false;
    private AccountModel account = new();
    private string confirmPassword = "";

    void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Save()
    {
        if (String.IsNullOrEmpty(account.Password) || String.IsNullOrEmpty(confirmPassword) || String.IsNullOrEmpty(account.Username))
        {
            Extensions.ShowAlert("All fields are required.", Variant.Filled, SnackBarService, Severity.Error);
            return;
        }
        if(GlobalClass.accountModels.Any( e => e.Username == account.Username))
        {
            Extensions.ShowAlert("Username already exist.", Variant.Filled, SnackBarService, Severity.Error);
            return;
        }
        IsLoading = true;
        StateHasChanged();
        if(account.Password == confirmPassword)
        {
            Task t =  AccountService.AddUser(account);
            await t;
            if(t.Status == TaskStatus.RanToCompletion)
            {
                Extensions.ShowAlert("User save successfuly.", Variant.Filled, SnackBarService, Severity.Success);
                IsLoading = false;
                MudDialog.Close();
            }
        } else
        {
            Extensions.ShowAlert("Password did not match.", Variant.Filled, SnackBarService, Severity.Error);
            IsLoading = false;
        }
        
    }
}
